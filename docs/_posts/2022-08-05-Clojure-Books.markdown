Today, a friend asked me to recommend Clojure books for starting with the language. Around 3 years back I had read *Programming Clojure* by Stu Halloway and Alex Miller. But I ended up recommending *Clojure for the Brave and True* (saying I did not finished this), and *Joy of Clojure* and *Getting Clojure* saying haven't read these.

The authors of Programming Clojure are widely known. Yet I did not recommend the book. Why would someone do that about the book that they have read? 

The reasons are primarily these: 

For too long and every now and then the tone of the book was defensive- how clojure has the best design, how REPL is better, can you write this function in java in 3 lines, the same program has fewer parentheses in clojure than in java, etc. This kind of defensiveness gets TOO boring after a while. I followed Stu on twitter but same experience there so unfollowed after a while. Comparatively, Miller's twitter presence is better. I know both of them have very large footprints in the clojure ecosystem. But, for example, Rich Hickey's talks on clojure features say similar things without getting boring and defensive. (His talks which are not limited to clojure features are very popular. Personally, I like "Are We There Yet" better than his more popular talk "Simple Made Easy". To each his own.)

Second reason was that the book did not have any exercises at the end of the chapters. I had really liked exercises in Programming Elixir 1.6 book and also from Joe Armstrong's Programming Erlang. All these books are pragmatic programmer books. So maybe the editors/ reviewers could have helped. I do not always solve all the problems at the end of the chapter. But not having any felt like a shortcoming. In Elixir book for example, Dave Thomas teaches some concepts in the text and some more concepts in the exercises. Learning and programming along has certain sense of achievement associated with it. Of course better language learning happens when you use the language. So good if you get a chance to use it after reading books.

So I suggested to my friend to take my advice with a disclaimer that I did not use clojure in any work project and haven't touched it for a couple of years.